using namespace std;
#include <vector>

int josephusSurvivor(int man, int kill) 
{
    vector<int> men;
    for(int i=1;i<=man;i++)
    {
        men.push_back(i);//makes the group
    }
    unsigned long victim = 0;
 
    while(men.size() > 1)
    {
        victim += kill;
        victim--;//accounting for starting at 1 and the person last killed
        
        while(victim >= men.size())
        {
            victim -= men.size();//if the victim is outside group size, wrap around
        }
        men.erase(men.begin() + victim);//killing the victim
    }
    return men[0];//return survivor
}
/*
Josephus Survivor

In this kata you have to correctly return who is the "survivor", ie: the last element of a Josephus permutation.

Basically you have to assume that n people are put into a circle and that they are eliminated in steps of k elements, like this:

josephus_survivor(7,3) => means 7 people in a circle;
one every 3 is eliminated until one remains
[1,2,3,4,5,6,7] - initial sequence
[1,2,4,5,6,7] => 3 is counted out
[1,2,4,5,7] => 6 is counted out
[1,4,5,7] => 2 is counted out
[1,4,5] => 7 is counted out
[1,4] => 5 is counted out
[4] => 1 counted out, 4 is the last element - the survivor!
*/
